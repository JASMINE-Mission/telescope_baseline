runs:
  using: "Composite"
  steps:
    - name: Test with pytest
      env:
        BRANCH: ${{ github.ref_name}}
        TEST_DIR: ${{ env.TEST_DIR}}
      id: pytest
      continue-on-error: true
      run: |
        export PYTHONPATH=./src:./tests:./$TEST_DIR:$PYTHONPATH
        python -m pip install pytest pytest-html pytest-cov
        python -m pytest $TEST_DIR --junitxml=test_report/$BRANCH/pytest.xml --html=test_report/$BRANCH/pytest.html --cov=src --cov-branch --cov-report=term-missing --cov-report=html --cov-report xml
      shell: bash

    - name: checkout Pages branch
      if: ${{ env.TEST_ONLY != 'true'}}
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: pages

    - name: Move Test Reporting Files
      if: ${{ env.TEST_ONLY != 'true'}}
      env:
        BRANCH: ${{ github.ref_name}}
      run: |
        rm htmlcov/.gitignore
        rm -rf pages/test_report/$BRANCH
        cp -r test_report/* pages/test_report
        mv htmlcov pages/test_report/$BRANCH/

#      env:
#        BRANCH: ${{ github.ref_name}}
#        REPOSITORY: ${{ github.repository}}

#    - name: Generate Test Report Index
#      if: ${{ env.TEST_ONLY != 'true'}}
#      env:
#        BRANCH: ${{ github.ref_name}}
#        REPOSITORY: ${{ github.repository}}
#      run: |
#        rm htmlcov/.gitignore
#        rm -rf pages/test_report/$BRANCH
#        cp -r test_report/* pages/test_report
#        mv htmlcov pages/test_report/$BRANCH/
#        pushd pages/test_report
#        echo "<html><head><title>JASMINE Testing Report</title></head><body><h1>JASMINE TESTING REPORT</h1><ul>" > index.html
#        find . -name pytest.html | xargs -Ixxx dirname xxx | awk '{print substr($0, 3)}' | xargs -Ixxx echo "<li><a href=\"https://github.com/$REPOSITORY/actions/workflows/pytest.yml?query=branch:xxx\"><img src=\"https://github.com/$REPOSITORY/actions/workflows/pytest.yml/badge.svg?branch=xxx\" alt=\"pytest\" style=\"max-width: 100%;\"></a>xxx<a href=\"xxx/pytest.html\">(Test Report)</a><a href=\"xxx/htmlcov/index.html\">(Test Coverage Report)</a></li>" >> index.html
#        echo "</ul></body></html>" >> index.html
#        popd
#      shell: bash

#    - name: Publish Test Report
#      if: ${{ env.TEST_ONLY != 'true'}}
#      uses: peaceiris/actions-gh-pages@v3
#      with:
#        github_token: ${{ env.GITHUB_TOKEN }}
#        publish_dir: ./pages
#        keep_files: true

    - name: Send Coverage Report to CodeClimate
      if: ${{ steps.pytest.outcome == 'success' && env.TEST_ONLY != 'true'}}
      uses: paambaati/codeclimate-action@v3.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ env.CC_TEST_REPORTER_ID }}
      with:
        debug: false
        coverageLocations: coverage.xml:coverage.py

    - name: Notice Slack
      if: ${{ steps.pytest.outcome == 'failure' }}
      uses: slackapi/slack-github-action@v1.21.0
      with:
        payload: |
          {
            "text": "${{ github.ref_name}}で${{ env.TEST_DIR}}配下のテストが全件パスしませんでした。\n詳細はGithub上のActionsページで直近のエラーとなっているActionを参照ください。"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL}}

    - name: Notice Error
      if: ${{ steps.pytest.outcome == 'failure' }}
      run: exit 1
      shell: bash
